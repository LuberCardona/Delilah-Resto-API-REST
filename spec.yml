
swagger: "2.0"
info:
  description: "API para pedidos de comida. Como cliente, podras registrarte, ver el listado de nuestros productos y realizar una orden. Los administradores del restaurante tienen la posibilidad  de crear, editar o eliminar un producto, tambien podran actualizar el estado de un pedido o eliminar el pedido"
  version: "1.0.0"
  title: "Delilah Resto"
host: "localhost:5000"
basePath: "/v1"
tags:
- name: "Productos"
  description: "Endpoints para manejo de los productos"
- name: "Pedidos"
  description: "Endpoints para manejo de los pedidos"
- name: "Usuarios"
  description: "Endpoints para manejo de los usuarios"  
  externalDocs:
    description: "Find out more"
    url: "http://localhost:5000/"
schemes:
- "http"
paths:
  /crearProducto:
    post:
      tags:
      - "Productos"
      summary: "Crear un nuevo producto"
      description: "Token requerido para esta accion, se debe incluir en Authorization o en los headers en postman"
      operationId: "AgregarUnProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"   
        required: true
        type: "string"  
      - name: "body"
        in: "body"   
        required: true  
        description: "Objeto con los datos del producto que se va a crear"        
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "400":
          description: "datos no validos"
        "200":
          description: "Producto creado"
        "500":
          description: "Error interno del servidor"
  /modificarProducto/:        
    put:
      tags:
      - "Productos"
      summary: "Modificar los datos de un producto"
      description: "El id del producto es obligatorio para realizar la actualización y el Token es requerido para esta accion, se debe incluir en Authorization o en los headers en postman"
      operationId: "actualizarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"   
        required: true
        type: "string" 
      - in: "body"
        name: "body"
        description: "Objeto con los datos del producto que se va a actualizar"
        required: true
        schema:
          $ref: "#/definitions/Producto"
      responses:
        "200":
          description: "Producto modificado"
          schema:
           $ref: '#/definitions/Producto'
        "404":
          description: "producto no encontrado"
        "400":
          description: "datos no validos"
        "500":
          description: "Error interno del servidor"
  /eliminarProducto/:        
    delete:
      tags:
      - "Productos"
      summary: "Eliminar un producto"
      description: "El id del producto es obligatorio para realizar la actualización y el Token es requerido para esta accion, se debe incluir en Authorization o en los headers en postman"
      operationId: "EliminarProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"   
        required: true
        type: "string"
      - name: "id"
        in: "query"
        required: true
        type: "integer"
        description: "Identificador del producto a eliminar"
      responses:
        "200":
          description: "Producto eliminado"
        "400":
          description: "Formato de id no valido"
        "404":
          description: "Producto no encontrado"
        "500":
          description: "Error interno del servidor"
  /consultarProductos:
    get:
      tags:
      - "Productos"
      summary: "Consultar todos los productos"
      description: ""
      operationId: "consultarProductos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Productos consultados"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/Producto"
        "404":
          description: "Productos no encontrados"
        "500":
          description: "Error interno del servidor"
  /consultarProducto/:
    get:
      tags:
      - "Productos"
      summary: "Consultar un solo producto por id"
      description: "El id del producto es obligatorio para realizar esta consulta"
      operationId: "consultarUnProducto"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Producto consultado"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/Producto"
        "404":
          description: "Producto no encontrado"
        "500":
          description: "Error interno del servidor"      
  /crearPedido:
    post:
      tags:
      - "Pedidos"
      summary: "Crear un pedido nuevo"
      description: ""
      operationId: "AgregarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto con los datos del pedido que se va a crear"
        required: true
        schema:
          $ref: "#/definitions/Pedido"
      responses:
        "400":
          description: "datos no validos"
        "200":
          description: "Pedido creado"
        "500":
          description: "Error interno del servidor"
  /modificarPedido/:        
    put:
      tags:
      - "Pedidos"
      summary: "Modificar el estado de un pedido"
      description: "El id del pedido es obligatorio para realizar la actualización y el Token es requerido para esta accion, se debe incluir en Authorization o en los headers en postman"
      operationId: "actualizarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"   
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Objeto con los datos del pedido que se va a actualizar"
        required: true
        schema:
          $ref: "#/definitions/modificarPedido"
      responses:
        "200":
          description: "Pedido actualizado"
          schema:
           $ref: '#/definitions/Pedido'
        "404":
          description: "Pedido no encontrado"
        "400":
          description: "datos no validos"
        "500":
          description: "Error interno del servidor"   
  /eliminarPedido/:        
    delete:
      tags:
      - "Pedidos"
      summary: "Eliminar un pedido"
      description: "El id del producto es obligatorio para realizar esta accion y el Token es requerido, éste se debe incluir en Authorization o en los headers en postman"
      operationId: "EliminarPedido"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"   
        required: true
        type: "string"
      - name: "id"
        in: "query"
        required: true
        type: "integer"
        description: "Identificador del pedido a eliminar"
      responses:
        "200":
          description: "Pedido eliminado"
        "400":
          description: "Formato de id no valido"
        "404":
          description: "Pedido no encontrado"
        "500":
          description: "Error interno del servidor"         
  /consultarPedidos:
    get:
      tags:
      - "Pedidos"
      summary: "Consultar pedidos"
      description: "El Token es requerido, éste se debe incluir en Authorization o en los headers en postman"
      operationId: "consultarPedidos"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Bearer token"
        in: "header"   
        required: true
        type: "string"
      responses:
        "200":
          description: "Pedidos consultados"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/pedidoConsultado"
        "400":
          description: "Datos invalidos"     
        "404":
          description: "Pedido no encontrado"
        "500":
          description: "Error interno del servidor"  
  /crearUsuario:
    post:
      tags:
      - "Usuarios"
      summary: "Crear un usuario nuevo"
      description: ""
      operationId: "AgregarUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto con los datos del usuario que se va a crear"
        required: true
        schema:
          $ref: "#/definitions/Usuario"
      responses:
        "400":
          description: "Objeto con datos no validos"
        "200":
          description: "Usuario creado"
        "500":
          description: "Error interno del servidor"   
  /loginUsuario:
    post:
      tags:
      - "Usuarios"
      summary: "login de usuario"
      description: ""
      operationId: "loginUsuario"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Objeto con los datos del usuario que se va a loguear"
        required: true
        schema:
          $ref: "#/definitions/loginUsuario"
      responses:
        "400":
          description: "datos no validos"
        "401":
          description: "usuario o contraseña invalidos"  
        "200":
          description: "acceso autorizado + generacion de token"
        "500":
          description: "Error interno del servidor"  
  /infoUsuarios:               
    get:
       tags:
       - "Usuarios"
       summary: "Consultar usuarios"
       description: El Token es requerido, éste se debe incluir en Authorization o en los headers en postman"
       operationId: "consultarUsuarios"
       consumes:
       - "application/json"
       produces:
       - "application/json"
       responses:
        "200":
          description: "Usuarios consultados"
          schema:
            type: "array"
            items:
             $ref: "#/definitions/Usuario"
        "400":
          description: "Datos invalidos"     
        "404":
          description: "Usuario no encontrado"
        "500":
          description: "Error interno del servidor"                    
definitions:
  Producto:
    type: "object"
    properties:
      nombrePto:
        type: "string"
      precio:
        type: "integer"
        format: "int64"
      nombreCorto:
        type: "string"
      favorito:
        type: "integer"
        format: "int64"
  Pedido:
    type: "object"
    properties:
      idProducto:
        type: "integer"
        format: "int64"  
      idEstadoPedido:
        type: "integer"
        format: "int64"
      idUsuario:
        type: "integer"
        format: "int64" 
      idMedioDePago:
        type: "integer"
        format: "int64"  
  modificarPedido:
    type: "object"
    properties:
      idEstadoPedido:
        type: "integer"
        format: "int64" 
  pedidoConsultado:
    type: "object"
    properties:
      ESTADO:
        type: "string"
      HORA:
        type: "string"
        format: "date-time"   
      NUMERO_PEDIDO:  
        type: "integer"
        format: "int64" 
      DESCRIPCION:
        type: "string"  
      PAGO:
        type: "integer"
        format: "int64"
      MEDIO_DE_PAGO:  
        type: "string"
      USUARIO:
        type: "string"
      DIRECCION:
        type: "string"    

  Usuario:
    type: "object"
    properties:
      usuario:
        type: "string"  
      nombreCompleto:
        type: "string" 
      email:
        type: "string"
      telefono:
        type: "string"        
      direccionEnvio:
        type: "string"
      password:
        type: "string"
      idRolUsuario:
        type: "integer"
        format: "int64" 
  loginUsuario:
    type: "object"
    properties:
      usuario:
        type: "string" 
      password:
        type: "string"
      idRolUsuario:
        type: "integer"
        format: "int64"       
externalDocs:
  description: "Find out more DelilahResto"
  url: "http://localhost:5000/" 